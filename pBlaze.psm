; defino los registros en donde van a ir las salidas
; 
CONSTANT control_listo ,  01      
CONSTANT control_escribe, 02     
CONSTANT control_lee,     03        
CONSTANT escribe_dato,    04       
CONSTANT escribe_dir,     05 
CONSTANT direccion,       06; para controlar lo que llega al VGA

; defino los puertos de entrada, los que van al MUX de los esquematicos
CONSTANT listo,                     01



; defino los puertos de entrada, de la carga de los registros
CONSTANT      dat_dir_0, 04; 02
CONSTANT      dat_dir_1, 05; 10
CONSTANT      dat_dir_2, 06; 00 
CONSTANT      dat_dir_3, 07; D2
CONSTANT      UNO,       08; 1
CONSTANT      F_1,       09; f1
CONSTANT      H_21,      0A; 21 segundo
CONSTANT      H_22,      0B; 22 minuto
CONSTANT      H_23,      0C; 23 hora
CONSTANT      H_24,      0D; 24 dia
CONSTANT      H_25,      0E; 25 mes
CONSTANT      H_26,      0F; 26 a単o
CONSTANT      H_41,      10; 41 seg crono
CONSTANT      H_42,      11; 42 min crono
CONSTANT      H_43,      12; 43 hora crono


; defino las entradas del mux donde van a estar las posiciones para las direcciones
;No hay que poner UNO ni CERO poruqe ya estan
CONSTANT      TRES,    13  ; 3
CONSTANT      CUATRO,  14  ; 4
CONSTANT      CINCO,   15 ; 5
CONSTANT      SEIS,    16; 6
CONSTANT      SIETE,   17 ; 7
CONSTANT      OCHO,    18; 8
CONSTANT      REG_1,   1A;fecha
CONSTANT      REG_2,   1B;reloj
CONSTANT      REG_3,   1C;cronometro
CONSTANT      RST_CRONO,1E;reset cronometro
CONSTANT	   F_0,1F;
CONSTANT      F_2,20;


; defino la tecla destinada para la interrupcion
CONSTANT tecla, 19
CONSTANT  tecla_2, 1D

CALL     Iniciar; 

;-------------------------------Principal-----------------------
Iniciar:           
		    
		    
		    INPUT    s0, dat_dir_0
                    INPUT    s1, dat_dir_1
                    INPUT    s2, dat_dir_2;--------no cambiar------------
                    INPUT    s3, dat_dir_3
                    INPUT    s4, UNO ;-------------no cambiarlo----------
	            INPUT    s6, H_21
                    CALL     secuencia_de_inicializacion
                    CALL     leer; lee los datos provenientes del rtc
                    JUMP Iniciar                    
;La maquina de estados 'iniciar' debe generar una bandera cuando le llegue cuando el pico le envie control_listo en alto, 
;hasta que la maquina no envie listo en alto se esperara mediante el cilo la carga de los datos, cuando esta termine levanta 
; la bandera de listo y se sale del ciclo, asi como el pico pone a control_listo en bajo
;ciclo_listo se intancia en secuencia_de_inicializacio, cuando bucle de c-listo, se hace un jump a leer para conocer el estado 
; del rtc

secuencia_de_inicializacion:   OUTPUT   s0, escribe_dir
                               OUTPUT   s1, escribe_dato
                               OUTPUT   s4, control_listo
                               CALL     ciclo_listo ;  
                              ; esto se hace por fuera OUTPUT   s2, control_listo; reinicio
                               
                               OUTPUT   s0, escribe_dir
                               OUTPUT   s2, escribe_dato
                               OUTPUT   s4, control_listo
                               CALL     ciclo_listo ;  
                              ; esto se hace por fuera OUTPUT   s2, control_listo; reinicio
                               
                               OUTPUT   s1, escribe_dir
                               OUTPUT   s3, escribe_dato
                               OUTPUT   s4, control_listo
                               CALL     ciclo_listo ;
                              ; esto se hace por fuera OUTPUT   s2, control_listo; reinicio
                               
                               RETURN
;-------------------------------etiquitas-----------------------                               
leer:   INPUT  s0, F_0
        OUTPUT s0, escribe_dir
        OUTPUT s4, control_lee
        CALL     ciclo_listo 
        
        INPUT  s6, H_21; segundos
        OUTPUT s6, escribe_dir
        INPUT  s7, dat_dir_0 ;direccion 2 
        OUTPUT s7, direccion
        OUTPUT s4, control_lee
        CALL     ciclo_listo 
        
        INPUT  s6, H_22; minuto
        OUTPUT s6, escribe_dir
        INPUT  s7, UNO ;direccion 1
        OUTPUT s7, direccion
        OUTPUT s4, control_lee
        CALL     ciclo_listo 
        
        INPUT  s6, H_23; hora
        OUTPUT s6, escribe_dir
        INPUT  s7, dat_dir_2 ;direccion 0
        OUTPUT s7, direccion
        OUTPUT s4, control_lee
        CALL     ciclo_listo 
        
        INPUT  s6, H_24; dia
        OUTPUT s6, escribe_dir
        INPUT  s7, CUATRO;direccion 4
        OUTPUT s7, direccion
        OUTPUT s4, control_lee
        CALL     ciclo_listo 
        
        INPUT  s6, H_25; mes
        OUTPUT s6, escribe_dir
        INPUT  s7, TRES;direccion 3
        OUTPUT s7, direccion
        OUTPUT s4, control_lee
        CALL     ciclo_listo 
        
        INPUT  s6, H_26; a単o
        OUTPUT s6, escribe_dir
        INPUT  s7, CINCO;direccion 5
        OUTPUT s7, direccion
        OUTPUT s4, control_lee
        CALL     ciclo_listo 
	   
	   CALL timer

        
        INPUT  s7, UNO
	   INPUT    sC, tecla_2
        COMPARE sC, s7
        CALL Z, escribir

        INPUT s6, RST_CRONO; reset crono
	   INPUT  s7, UNO
        COMPARE s6, s7
	   CALL Z, reset_crono

        JUMP leer
;-------------------------------etiquitas-----------------------

ciclo_listo:        INPUT     s5, listo
                    COMPARE   s4, s5
                    JUMP      NZ, ciclo_listo
                    RETURN       

;---------------------------------------------------------------
escribir:
	INPUT    sA, tecla
	COMPARE sA, 7D  ; fecha
	JUMP Z, mod_fecha
	COMPARE sA, 6C  ; reloj
	JUMP Z, mod_reloj
	COMPARE sA, 75  ; cronometro
	JUMP Z, mod_cronometro
	RETURN	
;---------------------------------------------------------------
        

mod_fecha: 
        INPUT  s6, H_24; dia
        OUTPUT s6, escribe_dir
        INPUT  sB, REG_1; dia
        OUTPUT sB, escribe_dato
        INPUT  s7, CUATRO;direccion 4
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe
        CALL     ciclo_listo 

        INPUT  s6, H_25; mes
        OUTPUT s6, escribe_dir
        INPUT  sB, REG_2; mes
        OUTPUT sB, escribe_dato
        INPUT  s7, TRES;direccion 3
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe  
        CALL     ciclo_listo 
        
        INPUT  s6, H_26; a単o
        OUTPUT s6, escribe_dir
        INPUT  sB, REG_3; a単o
        OUTPUT sB, escribe_dato
        INPUT  s7, CINCO;direccion 5
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe  
        CALL     ciclo_listo
        
        INPUT  s0, F_1
        OUTPUT s0, escribe_dir
	   OUTPUT s4, control_escribe 
	   CALL     ciclo_listo 

        JUMP leer
 ;--------------------------------------------------------------
        
       
mod_reloj: 

        INPUT  s6, H_21; segundos
        OUTPUT s6, escribe_dir
        INPUT  sB, REG_1; segundos
        OUTPUT sB, escribe_dato
        INPUT  s7, dat_dir_0 ;direccion 2 
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe
        CALL     ciclo_listo 

        
        INPUT  s6, H_22; minuto
        OUTPUT s6, escribe_dir
        INPUT  sB, REG_2; minuto
        OUTPUT sB, escribe_dato
        INPUT  s7, UNO ;direccion 1
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe  
        CALL     ciclo_listo 
        
        INPUT  s6, H_23; hora
        OUTPUT s6, escribe_dir
        INPUT  sB, REG_3; hora
        OUTPUT sB, escribe_dato
        INPUT  s7, dat_dir_2 ;direccion 0
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe  
        CALL     ciclo_listo

        INPUT  s0, F_1
        OUTPUT s0, escribe_dir
	   OUTPUT s4, control_escribe 
        CALL     ciclo_listo 

        
        JUMP leer
;---------------------------------------------------------------


;--------------------TIMER-------------------------------------
timer:
	   ;INPUT  s7, F_2;direccion 8 
        ;OUTPUT s7, direccion

       ; INPUT  s0, F_2
       ; OUTPUT s0, escribe_dir
       ; OUTPUT s4, control_lee
       ; CALL     ciclo_listo 

	   INPUT  s6, H_41; segundo crono
        OUTPUT s6, escribe_dir
        INPUT  s7, OCHO;direccion 8
        OUTPUT s7, direccion
        OUTPUT s4, control_lee
        CALL     ciclo_listo 

	  INPUT  s6, H_42; minuto crono 
        OUTPUT s6, escribe_dir
        INPUT  s7, SIETE;direccion 7
        OUTPUT s7, direccion
        OUTPUT s4, control_lee
        CALL     ciclo_listo 

	   ;INPUT  s7, F_2;direccion 8 
        ;OUTPUT s7, direccion


	   INPUT  s6, H_43; hora crono
        OUTPUT s6, escribe_dir
        INPUT  s7, SEIS;direccion 6
        OUTPUT s7, direccion
        OUTPUT s4, control_lee
        CALL     ciclo_listo 
	   RETURN
;----------------------------fin timer--------------------------
        

mod_cronometro: 


        OUTPUT s2, escribe_dir
        INPUT  sB, OCHO; arrancar crono
        OUTPUT sB, escribe_dato
        OUTPUT s4, control_escribe
        CALL     ciclo_listo 


        INPUT  s6, H_41; segundos
        OUTPUT s6, escribe_dir
        OUTPUT s2, escribe_dato
        INPUT  s7, OCHO ;direccion 8 
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe
        CALL     ciclo_listo 

        INPUT  s6, H_42; minutos
        OUTPUT s6, escribe_dir
        OUTPUT s2, escribe_dato
        INPUT  s7, SIETE ;direccion 7 
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe
        CALL     ciclo_listo 

        
        INPUT  s6, H_43; horas
        OUTPUT s6, escribe_dir
        OUTPUT s2, escribe_dato
        INPUT  s7, SEIS ;direccion 6 
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe
        CALL     ciclo_listo 


          INPUT  s0, F_2
        OUTPUT s0, escribe_dir
	   OUTPUT s4, control_escribe 
        CALL     ciclo_listo 


        
        JUMP leer

;---------------------------------------------------------------
        
reset_crono:

        INPUT  s6, H_41; segundos
        OUTPUT s6, escribe_dir
        OUTPUT s2, escribe_dato
        INPUT  s7, OCHO ;direccion 8 
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe
        CALL     ciclo_listo 

        INPUT  s6, H_42; minutos
        OUTPUT s6, escribe_dir
        OUTPUT s2, escribe_dato
        INPUT  s7, SIETE ;direccion 7 
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe
        CALL     ciclo_listo 

        
        INPUT  s6, H_43; horas
        OUTPUT s6, escribe_dir
        OUTPUT s2, escribe_dato
        INPUT  s7, SEIS ;direccion 6 
        OUTPUT s7, direccion
        OUTPUT s4, control_escribe
        CALL     ciclo_listo 


        INPUT  s0, F_2
        OUTPUT s0, escribe_dir
	   OUTPUT s4, control_escribe 
        CALL     ciclo_listo


	   OUTPUT s2, escribe_dir
        OUTPUT s2, escribe_dato
        OUTPUT s4, control_escribe
        CALL     ciclo_listo


	   RETURN 




